theme(plot.title = element_text(face = 'bold', size = 27))
p2 <- ggplot(plots.env, aes(x = lon, y = lat, size = Tilia18)) +
geom_point(shape = 21, col = 'darkgreen', fill = 'green') +
coord_equal() +
ggtitle('Tilia Cover Estimate 2018') +
theme(plot.title = element_text(face = 'bold', size = 27))
ggarrange(p1, p2, ncol = 2, common.legend = T)
dev.off()
unique(dat.all$accepted_name[grep('Fraxinus', dat.all$accepted_name)])
get_spp_cover <- function(dat, spp){
dat <- dat[which(!is.na(dat$cover)),]
dat <- dat[which(dat$cover != 0),]
dat$cover <- as.numeric(dat$cover)
total_cover <-
data.frame(
cov = sapply(unique(dat$plot), function(x){
sum(dat$cover[which(dat$plot == x & dat$accepted_name %in% spp)], na.rm = T)
}
),
row.names = unique(dat$plot)
)
total_cover$cov <- as.numeric(as.character(total_cover$cov))
return(total_cover)
}
Frax_cov07 <- get_spp_cover(dat.07, c('Fraxinus americana', 'Fraxinus pennsylvanica', 'Fraxinus quadrangulata', 'Fraxinus'))
Frax_cov18 <- get_spp_cover(dat.18, c('Fraxinus americana', 'Fraxinus pennsylvanica', 'Fraxinus quadrangulata', 'Fraxinus'))
plots.env$Frax07 <- Frax_cov07$cov[match(rownames(plots.env), rownames(Frax_cov07))]
plots.env$Frax18 <- Frax_cov18$cov[match(rownames(plots.env), rownames(Frax_cov18))]
png('figures/Summer 2019/Maps/change_Frax.png', width = 1500, height = 600)
p1<- ggplot(plots.env, aes(x = lon, y = lat, size = Frax07)) +
geom_point(shape = 21, col = 'darkgreen', fill = 'green') +
coord_equal() +
ggtitle('Fraxinus Cover Estimate 2007') +
theme(plot.title = element_text(face = 'bold', size = 27))
p2 <- ggplot(plots.env, aes(x = lon, y = lat, size = Frax18)) +
geom_point(shape = 21, col = 'darkgreen', fill = 'green') +
coord_equal() +
ggtitle('Fraxinus Cover Estimate 2018') +
theme(plot.title = element_text(face = 'bold', size = 27))
ggarrange(p1, p2, ncol = 2, common.legend = T)
dev.off()
plot_imp <- read.csv('data/MachineLearning/Matrix/all_change.csv_RF_imp', sep = '\t', header = F)
head(plot_imp)
species_imp <- read.csv('data/MachineLearning/Matrix/species_change.csv_RF_imp.csv', header = F)
allfeat_imp <- read.csv('data/MachineLearning/Matrix/plots_change.csv_RF_imp', sep = '\t', header = F)
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 600, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.005),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(feature_imp[which(feature_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 600, height = 700)
ggplot(feature_imp[which(feature_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 600, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 600, height = 700)
ggplot(plot_imp[which(plot_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', col = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 600, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 600, height = 700)
ggplot(plot_imp[which(plot_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 600, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 45, size = 15),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 45, size = 15),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 600, height = 700)
ggplot(plot_imp[which(plot_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 45, size = 15),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 0.5),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 600, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 600, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 600, height = 700)
ggplot(plot_imp[which(plot_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
library(ggplot2)
theme_set(theme_classic())
species_imp <- read.csv('data/MachineLearning/Matrix/species_change.csv_RF_imp.csv', header = F)
plot_imp <- read.csv('data/MachineLearning/Matrix/plots_change.csv_RF_imp', sep = '\t', header = F)
allfeat_imp <- read.csv('data/MachineLearning/Matrix/all_change.csv_RF_imp', sep = '\t', header = F)
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 800, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_all.png', width = 800, height = 700)
ggplot(allfeat_imp[which(allfeat_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#56B4E9') +
ggtitle('Top Predictors For Change - All Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_plot.png', width = 800, height = 700)
ggplot(plot_imp[which(plot_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#009E73') +
ggtitle('Top Predictors for Change - Plot Data') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 1000, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 45, size = 15, hjust = 1),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
png('figures/Summer 2019/MachineLearning/FeatureImportance/most_important_species.png', width = 800, height = 700)
ggplot(species_imp[which(species_imp$V2 > 0.01),]) +
geom_bar(aes(x = reorder(V1, -V2), y = V2), stat = 'identity', fill = '#E69F00') +
ggtitle('Top Predictors For Change - Species') +
theme(axis.text.x = element_text(angle = 90, size = 15),
axis.title.x = element_blank(),
plot.title = element_text(face = 'bold', size = 27))
dev.off()
table(plots.env$ComClass07)
table(plots.env$ComClass18)
length(which(plots.env$ComClass07 == 'Deep Forest' & plots.env$ComClass18 == 'Deep Forest'))
81/111
length(which(plots.env$ComClass07 == 'Edge' & plots.env$ComClass18 == 'Edge'))
69/80
length(which(plots.env$ComClass07 == 'Disturbed' & plots.env$ComClass18 == 'Disturbed'))
5/42
length(which(plots.env$ComClass07))
length(which(plots.env$ComClass07 == 'Mixed' & plots.env$ComClass18 == 'Mixed'))
132/193
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point() +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27))
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point() +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 21) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point() +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
png('figures/Summer 2019/Maps/Envt_data/mgmt_unit.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point() +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit, fill = MgmtUnit, alpha = 0.5))+
geom_point(shape = 21) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit, fill = MgmtUnit))+
geom_point(shape = 21, alpha = 0.5) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 21, fill = MgmtUnit, alpha = 0.5) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 21, fill =plots.env$MgmtUnit, alpha = 0.5) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 21, alpha = 0.5) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 21) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
png('figures/Summer 2019/Maps/Envt_data/mgmt_unit.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/mgmt_unit.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/burncount_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/burncount_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2018') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
names(plots.env)
png('figures/Summer 2019/Maps/Envt_data/burncount07_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount07))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2007') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/burncount07_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount07 + 1))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2007') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
plots.env$BurnCount07 <- plots.env$BurnCount07 + 1
png('figures/Summer 2019/Maps/Envt_data/burncount07_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount07))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2007') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
plots.env$BurnCount07
plots.env$BurnCount07 <- plots.env$BurnCount07 - 1
plots.env$BurnCount07[which(is.na(plots.env$BurnCount07))] <- 1
plots.env$BurnCount07 <- plots.env$BurnCount07 + 1
png('figures/Summer 2019/Maps/Envt_data/burncount07_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount07))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2007') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/mgmt_unit.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 19, size = 3) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/Maps/Envt_data/burncount_comclass.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = ComClass18, size = BurnCount))+
geom_point(shape = 19) +
coord_equal() +
ggtitle('Burn Count and Community Class 2018') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
plots.env$MgmtUnit[which(is.na(plots.env$MgmtUnit))] <- 'No Management'
png('figures/Summer 2019/Maps/Envt_data/mgmt_unit.png', width = 800, height = 600)
ggplot(plots.env, aes(x = lon , y = lat, col = MgmtUnit))+
geom_point(shape = 19, size = 3) +
coord_equal() +
ggtitle('Management Areas East Woods') +
theme(plot.title = element_text(face = 'bold', size = 27)) +
scale_color_manual(values = cbbPalette)
dev.off()
png('figures/Summer 2019/EcoStructure/Omega/BoxPlots/orgmatter.png', width = 800, height = 500)
plottop <- ggplot(data = hl_plots[which(hl_plots$TopOrgMat < 200),], aes(x = as.factor(ComClass07), y = as.numeric(TopOrgMat), fill = as.factor(ComClass07)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('% Organic Matter') +
ggtitle('0-10 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
legend.position = 'none',
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank(),
axis.title.y = element_text(face = 'bold', size = 19)) +
scale_fill_manual(values = cbbPalette)
plotlow <- ggplot(data = hl_plots[which(hl_plots$TopOrgMat < 200),], aes(x = as.factor(ComClass18), y = as.numeric(LowOrgMat), fill = as.factor(ComClass18)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('') +
ggtitle('10-20 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank()) +
scale_fill_manual(values = cbbPalette)
ggarrange(plottop, plotlow, ncol = 2, common.legend = T)
dev.off()
#   stat_compare_means(comparisons = my_comparisons) +
#   theme(legend.title = element_blank(),
#         plot.title = element_text(face='bold', size = 22),
#         axis.title.x = element_blank()) +
#   scale_fill_manual(values = cbbPalette)
#
# ggarrange(topplot07, topplot18, lowplot07, lowplot18, ncol = 2, nrow = 2, common.legend = T)
# dev.off()
#
#
png('figures/Summer 2019/EcoStructure/Omega/BoxPlots/orgmatter.png', width = 800, height = 500)
plottop <- ggplot(data = plots.env[which(plots.env$TopOrgMat < 200),], aes(x = as.factor(ComClass07), y = as.numeric(TopOrgMat), fill = as.factor(ComClass07)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('% Organic Matter') +
ggtitle('0-10 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
legend.position = 'none',
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank(),
axis.title.y = element_text(face = 'bold', size = 19)) +
scale_fill_manual(values = cbbPalette)
my_comparisons = list(c('Disturbed', 'Edge'), c('Edge', 'Mixed'), c('Deep Forest', 'Disturbed'), c('Deep Forest', 'Edge'), c('Disturbed', 'Mixed'), c('Deep Forest', 'Mixed'))
#   stat_compare_means(comparisons = my_comparisons) +
#   theme(legend.title = element_blank(),
#         plot.title = element_text(face='bold', size = 22),
#         axis.title.x = element_blank()) +
#   scale_fill_manual(values = cbbPalette)
#
# ggarrange(topplot07, topplot18, lowplot07, lowplot18, ncol = 2, nrow = 2, common.legend = T)
# dev.off()
#
#
png('figures/Summer 2019/EcoStructure/Omega/BoxPlots/orgmatter.png', width = 800, height = 500)
plottop <- ggplot(data = plots.env[which(plots.env$TopOrgMat < 200),], aes(x = as.factor(ComClass07), y = as.numeric(TopOrgMat), fill = as.factor(ComClass07)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('% Organic Matter') +
ggtitle('0-10 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
legend.position = 'none',
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank(),
axis.title.y = element_text(face = 'bold', size = 19)) +
scale_fill_manual(values = cbbPalette)
plotlow <- ggplot(data = plots.env[which(plots.env$TopOrgMat < 200),], aes(x = as.factor(ComClass18), y = as.numeric(LowOrgMat), fill = as.factor(ComClass18)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('') +
ggtitle('10-20 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank()) +
scale_fill_manual(values = cbbPalette)
ggarrange(plottop, plotlow, ncol = 2, common.legend = T)
dev.off()
names(plots.env)
theme_set(theme_minimal())
#   stat_compare_means(comparisons = my_comparisons) +
#   theme(legend.title = element_blank(),
#         plot.title = element_text(face='bold', size = 22),
#         axis.title.x = element_blank()) +
#   scale_fill_manual(values = cbbPalette)
#
# ggarrange(topplot07, topplot18, lowplot07, lowplot18, ncol = 2, nrow = 2, common.legend = T)
# dev.off()
#
#
png('figures/Summer 2019/EcoStructure/Omega/BoxPlots/orgmatter.png', width = 800, height = 500)
plottop <- ggplot(data = plots.env[which(plots.env$TopOrgMat < 200),], aes(x = as.factor(ComClass07), y = as.numeric(TopOrgMat), fill = as.factor(ComClass07)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('% Organic Matter') +
ggtitle('0-10 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
legend.position = 'none',
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank(),
axis.title.y = element_text(face = 'bold', size = 19)) +
scale_fill_manual(values = cbbPalette)
plotlow <- ggplot(data = plots.env[which(plots.env$TopOrgMat < 200),], aes(x = as.factor(ComClass18), y = as.numeric(LowOrgMat), fill = as.factor(ComClass18)))+
geom_boxplot(outlier.fill = 'white', outlier.color = 'black', outlier.shape = 21) +
ylab('') +
ggtitle('10-20 cm') +
stat_compare_means(comparisons = my_comparisons) +
theme(legend.title = element_blank(),
plot.title = element_text(face='bold', size = 22),
axis.title.x = element_blank()) +
scale_fill_manual(values = cbbPalette)
ggarrange(plottop, plotlow, ncol = 2, common.legend = T)
dev.off()
