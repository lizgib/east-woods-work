original <- read.table('~/Documents/FS18/PLB400/Bioinformatics18/project/table2.tsv.NAimputed.txt')
original <- read.table('~/Documents/FS18/PLB400/Bioinformatics18/project/table2.tsv.NAimputed.txt', na.strings = 'NA')
original <- read.table('~/Documents/FS18/PLB400/Bioinformatics18/project/table2.tsv.NAimputed.txt', header = T, sep = '\t')
View(original)
genes <- read.table('~/Documents/FS18/PLB498/even_genes.tsv')
genes <- read.table('~/Documents/FS18/PLB498/even_genes.tsv', header = T, sep = '\t')
View(genes)
View(genes)
newdf <- original[which(original$gene %in% genes$X)]
newdf <- original[which(original$gene %in% genes$X),]
View(newdf)
match(genes$X, original)
match(genes$X, original$gene)
original <- original[order('gene'),]
View(original)
original <- original[order(gene),]
original <- read.table('~/Documents/FS18/PLB400/Bioinformatics18/project/table2.tsv.NAimputed.txt', header = T, sep = '\t')
temp <- original[order('gene'),]
View(temp)
which(original$gene %in% genes$X)
which(genes$X %in% original$gene)
match(genes$X, original$gene)
usethis <- cbind(original$gene, original$fitness, original[, 20:246])
View(usethis)
newdf <- usethis[which(genes$X %in% usethis$`original$gene`),]
newdf <- usethis[which(usethis$`original$gene` %in% genes$X),]
View(genes)
write.table(newdf, 'new_feature_table.tsv', sep = '\t')
newdf <- original[which(genes$X %in% usethis$`original$gene`),]
write.table(newdf, 'new_feature_table.txt', sep = '\t', quote = F)
View(original)
source('~/Documents/GitHub/east_woods_work/scripts/00.combine_spp_pools.R')
source('~/Documents/GitHub/east_woods_work/scripts/01.falltranslationkey.R')
source('~/Documents/GitHub/east_woods_work/scripts/01.falltranslationkey.R')
source('~/Documents/GitHub/east_woods_work/scripts/01.falltranslationkey.R')
source('~/Documents/GitHub/east_woods_work/scripts/00.combine_spp_pools.R')
source('~/Documents/GitHub/east_woods_work/scripts/01.falltranslationkey.R')
source('~/Documents/GitHub/east_woods_work/scripts/02.compare_years.R')
source('~/Documents/GitHub/east_woods_work/scripts/03.natives.R')
source('~/Documents/GitHub/east_woods_work/scripts/03.natives.R')
# gonna use source for this script because im having problems :(
setwd('~/Documents/GitHub/east_woods_work/')
dat.all <- read.csv('data/dat.all.csv')
library(ape)
library(reshape2)
library(vegan)
tr.ewv4 <- read.tree('~/Documents/GitHub/east_woods_work/outputs/tr.ewv4')
com_mat <- function(dat, tr.ewv4){
dat$accepted_name <- trimws(dat$accepted_name)
vects <- list(plots = unique(sort(dat$plot)),
sp = unique(sort(dat$species)),
accname = unique(sort(dat$accepted_name)))
vects$accname <- vects$accname[which(!vects$accname %in% c('', ' ', '0'))]
dat.mat <- matrix(0, length(vects$plots), length(vects$accname),
dimnames = list(vects$plots, vects$accname))
for(p in unique(dat$plot)){
spp_occur <- as.data.frame(table(dat$accepted_name[which(dat$plot == p)]))
print(spp_occur)
for (spp in spp_occur$Var1){
print(spp)
if(!spp %in% dimnames(dat.mat)[[2]]) next
dat.mat[p, spp] <- 1
}
}
colnames(dat.mat) <- gsub('[-, ]', '_', colnames(dat.mat))
names_in_tree <- intersect(tr.ewv4$tip.label, colnames(dat.mat))
dat.mat.out <- dat.mat[,which(colnames(dat.mat) %in% names_in_tree)]
return(dat.mat.out)
}
#---------------------------------------------------------------------------------------------------
# FUNCTION CALL
dat.18 <- dat.all[which(dat.all$year == '2018'),]
dat.07 <- dat.all[which(dat.all$year == '2007'),]
dat.mat.all.07 <- com_mat(dat.07, tr.ewv4)
dat.mat.all.18 <- com_mat(dat.18, tr.ewv4)
table(dat.07$plot)
dat.07[which(dat.07$plot == 'A107'),]
unique(dat.07$accepted_name[which(dat.07$plot == 'A107'),])
unique(dat.07$accepted_name[which(dat.07$plot == 'A107')])
temp <- unique(dat.07$accepted_name[which(dat.07$plot == 'A107')])
intersect(tr.ewv4$tip.label, temp)
intersect(temp, tr.ewv4$tip.label)
tr.ewv4$tip.label
temp
temp <- gsub(' ', '_', temp)
temp
intersect(tr.ewv4$tip.label, temp)
source('~/Documents/GitHub/east_woods_work/scripts/07.community_data_matrices.pres_abs.R')
rowSums(dat.mat.all.07)
rowSums(dat.mat.all.07) == table(dat.07$plot)
table(dat.07$plot)
unique(dat.07$accepted_name)
unique(dat.07$accepted_name[which(dat.07$plot == 'A107')])
unique(dat.07$accepted_name[which(dat.07$plot == 'LL90')])
length(unique(dat.07$accepted_name[which(dat.07$plot == 'LL90')]))
length(unique(dat.07$accepted_name[which(dat.07$plot == 'UU130')]))
length(unique(dat.07$accepted_name[which(dat.07$plot == 'HB143')]))
length(unique(dat.07$accepted_name[which(dat.07$plot == 'AA79')]))
num_spp_per_plot <- function(dat){
tally <- c()
for( p in dat$plot){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
tally <- c(tally, x)
}
return(tally)
}
tally07 <- num_spp_per_plot(dat.07)
tally07
num_spp_per_plot <- function(dat){
tally <- c()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
tally <- c(tally, x)
}
return(tally)
}
tally07 <- num_spp_per_plot(dat.07)
tally07
rowSums(dat.mat.all.07)
temp <- data.frame(table(dat.mat.all.07))
temp
temp <- data.frame(rowSums(dat.mat.all.07))
temp
temp$rowSums.dat.mat.all.07. == tally07
setwd('~/Documents/GitHub/east_woods_work/')
# gonna use source for this script because im having problems :(
setwd('~/Documents/GitHub/east_woods_work/')
dat.all <- read.csv('data/dat.all.csv')
library(ape)
library(reshape2)
library(vegan)
tr.ewv4 <- read.tree('~/Documents/GitHub/east_woods_work/outputs/tr.ewv4')
com_mat <- function(dat, tr.ewv4){
dat$accepted_name <- trimws(dat$accepted_name)
vects <- list(plots = unique(sort(dat$plot)),
sp = unique(sort(dat$species)),
accname = unique(sort(dat$accepted_name)))
vects$accname <- vects$accname[which(!vects$accname %in% c('', ' ', '0'))]
dat.mat <- matrix(0, length(vects$plots), length(vects$accname),
dimnames = list(vects$plots, vects$accname))
for(p in unique(dat$plot)){
spp_occur <- as.data.frame(table(dat$accepted_name[which(dat$plot == p)]))
print(spp_occur)
for (spp in spp_occur$Var1){
print(spp)
if(!spp %in% dimnames(dat.mat)[[2]]) next
dat.mat[p, spp] <- 1
}
}
colnames(dat.mat) <- gsub('[-, ]', '_', colnames(dat.mat))
return(dat.mat)
# Commenting this out right now because I think that the dsicrepancy in
# numb spp per plot I am seeing is due to me only including
# spp in the tree. This is is a test dont keep it you idiot
# make sure the lines below are included in final run it will fuck everything else up
#names_in_tree <- intersect(tr.ewv4$tip.label, colnames(dat.mat))
#dat.mat.out <- dat.mat[,which(colnames(dat.mat) %in% names_in_tree)]
#return(dat.mat.out) #
}
num_spp_per_plot <- function(dat){
tally <- c()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
tally <- c(tally, x)
}
return(tally)
}
#---------------------------------------------------------------------------------------------------
# FUNCTION CALL
dat.18 <- dat.all[which(dat.all$year == '2018'),]
dat.07 <- dat.all[which(dat.all$year == '2007'),]
dat.mat.all.07 <- com_mat(dat.07, tr.ewv4)
dat.mat.all.18 <- com_mat(dat.18, tr.ewv4)
tally07 <- num_spp_per_plot(dat.07)
tally07
temp <- data.frame(rowSums(dat.mat.all.07))
temp$rowSums.dat.mat.all.07. == tally07
length(unique(dat.07$accepted_name[dat.07$plot == 'A133']))
dat.07['A133',]
dat.07['A133','accepted_name']
dat.07[dat.07$plot == 'A133']
dat.07[dat.07$plot == 'A133',]
dat.07$accepted_name[dat.07$plot == 'A133',]
dat.07$accepted_name[dat.07$plot == 'A133']
unique(dat.07$accepted_name[dat.07$plot == 'A133'])
num_spp_per_plot <- function(dat){
tally <- data.frame()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
rw <- c(p, x)
tally <- rbind(tally, rw)
}
return(tally)
}
tally07 <- num_spp_per_plot(dat.07)
tally07
setwd('~/Documents/GitHub/east_woods_work/')
# gonna use source for this script because im having problems :(
setwd('~/Documents/GitHub/east_woods_work/')
dat.all <- read.csv('data/dat.all.csv')
library(ape)
# gonna use source for this script because im having problems :(
dat.all <- read.csv('data/dat.all.csv')
library(ape)
library(reshape2)
library(vegan)
tr.ewv4 <- read.tree('~/Documents/GitHub/east_woods_work/outputs/tr.ewv4')
com_mat <- function(dat, tr.ewv4){
dat$accepted_name <- trimws(dat$accepted_name)
vects <- list(plots = unique(sort(dat$plot)),
sp = unique(sort(dat$species)),
accname = unique(sort(dat$accepted_name)))
vects$accname <- vects$accname[which(!vects$accname %in% c('', ' ', '0'))]
dat.mat <- matrix(0, length(vects$plots), length(vects$accname),
dimnames = list(vects$plots, vects$accname))
for(p in unique(dat$plot)){
spp_occur <- as.data.frame(table(dat$accepted_name[which(dat$plot == p)]))
print(spp_occur)
for (spp in spp_occur$Var1){
print(spp)
if(!spp %in% dimnames(dat.mat)[[2]]) next
dat.mat[p, spp] <- 1
}
}
colnames(dat.mat) <- gsub('[-, ]', '_', colnames(dat.mat))
return(dat.mat)
# Commenting this out right now because I think that the dsicrepancy in
# numb spp per plot I am seeing is due to me only including
# spp in the tree. This is is a test dont keep it you idiot
# make sure the lines below are included in final run it will fuck everything else up
#names_in_tree <- intersect(tr.ewv4$tip.label, colnames(dat.mat))
#dat.mat.out <- dat.mat[,which(colnames(dat.mat) %in% names_in_tree)]
#return(dat.mat.out) #
}
num_spp_per_plot <- function(dat){
tally <- data.frame()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
rw <- c(p, x)
tally <- rbind(tally, rw)
}
return(tally)
}
#---------------------------------------------------------------------------------------------------
# FUNCTION CALL
dat.18 <- dat.all[which(dat.all$year == '2018'),]
#---------------------------------------------------------------------------------------------------
# FUNCTION CALL
dat.18 <- dat.all[which(dat.all$year == '2018'),]
dat.07 <- dat.all[which(dat.all$year == '2007'),]
dat.mat.all.07 <- com_mat(dat.07, tr.ewv4)
dat.mat.all.18 <- com_mat(dat.18, tr.ewv4)
write.csv(dat.mat.all.07, 'data/dat.mat.all.07.csv')
write.csv(dat.mat.all.18, 'data/dat.mat.all.18.csv')
tally07 <- num_spp_per_plot(dat.07)
tally07
num_spp_per_plot <- function(dat){
tally <- data.frame()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
rw <- c(p, x)
print(rw)
tally <- rbind(tally, rw)
}
return(tally)
}
tally07 <- num_spp_per_plot(dat.07)
num_spp_per_plot <- function(dat){
tally <- data.frame()
for( p in unique(dat$plot)){
x <- length(unique(dat$accepted_name[which(dat$plot == p)]))
rw <- cbind(p, x)
print(rw)
tally <- rbind(tally, rw)
}
return(tally)
}
tally07 <- num_spp_per_plot(dat.07)
tally07
temp <- data.frame(rowSums(dat.mat.all.07))
temp
tally07
temp
tally07 <- row.names(tally07$p)
tally07
tally07 <- num_spp_per_plot(dat.07)
tally07
row.names(tally07$p)
tally07
tally07 <- row.names(tally07$p)
tally07
tally07 <- num_spp_per_plot(dat.07)
tally07
row.names(tally07) <- tally07$p
tally07
tally07$p <- NULL
tally07
tally07 <- sort(tally07)
tally07 <- tally07[order(row.names(tally07))]
tally07
tally07[order(row.names(tally07)),]
tally07
tally07 <- tally07[order(row.names(tally07)),]
tally07
tally07 <- num_spp_per_plot(dat.07)
row.names(tally07) <- tally07$p
tally07 <- tally07[order(tally07$p)]
tally07 <- tally07[order(tally07$p),]
tally07
tally07$p <- NULL
tally07
temp <- data.frame(rowSums(dat.mat.all.07))
temp
View(tally07)
colnames(dat.mat.all.07)
length(colnames(dat.mat.all.07))
length(unique(dat.07$accepted_name))
setdiff(colnames(dat.mat.all.07), unique(dat.07$accepted_name))
setdiff(unique(dat.07$accepted_name), colnames(dat.mat.all.07))
temp <- gsub(' ', '_', unique(dat.07$accepted_name))
temo
temp
setdiff(temp, colnames(dat.mat.all.07))
tally07 <- num_spp_per_plot(dat.07)
row.names(tally07) <- tally07$p
tally07 <- tally07[order(tally07$p),]
tally07$p <- NULL
tally07
temp <- data.frame(rowSums(dat.mat.all.07))
temp
match(row.names(temp), row.names(tally07))
temp <- data.frame(rowSums(dat.mat.all.07))
temp$dat.07_counts <- tally07$x[match(row.names(temp), row.names(tally07))]
temp$dat.07_counts <- tally07$x[match(row.names(temp), row.names(tally07))]
View(temp)
new <- row.names(temp[which(temp$rowSums.dat.mat.all.07. != temp$dat.07_counts)])
new <- row.names(temp[which(temp$rowSums.dat.mat.all.07. != temp$dat.07_counts),])
new
dat.07[dat.07$plot == 'A133']
dat.07[dat.07$plot == 'A133',]
unique(dat.07$accepted_name[dat.07$plot == 'A133'])
View(dat.07)
suspicious <- function(bad_plots, dat){
for(p in bad_plots){
return('' %in% dat$accepted_name[dat$plot == p])
}
}
suspicious(new, dat.07)
suspicious <- function(bad_plots, dat){
for(p in bad_plots){
print('' %in% dat$accepted_name[dat$plot == p])
}
}
suspicious(new, dat.07)
suspicious <- function(bad_plots, dat){
for(p in bad_plots){
print(p)
print('' %in% dat$accepted_name[dat$plot == p])
}
}
suspicious(new, dat.07)
source('~/Documents/GitHub/east_woods_work/scripts/07.community_data_matrices.pres_abs.R')
source('~/Documents/GitHub/east_woods_work/scripts/07.community_data_matrices.pres_abs.R')
source('~/Documents/GitHub/east_woods_work/scripts/06.tree_generation.R')
print(p)
p
p <- p + geom_tiplab(fontface = 'italic', size = 2, aes(angle = angle))
p
p <- ggtree(tre.ewv2.pruned, layout = 'circular')
p
p <- ggtree(tre.ewv2.pruned, layout = 'circular')+
geom_tiplab(fontface = 'italic', size = 2, aes(angle = angle))
p
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 2, aes(angle = angle))
p
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 2, aes(angle = angle))+
geom_label(aes(x = branch), label = tre.ewv2.pruned$node.label, size = 2)
p
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 2, aes(angle = angle))
p
tre.ewv2.pruned$tip.label
length(tre.ewv2.pruned$tip.label)
unique(dat.all$accepted_name)
dat.all <- dat.all[!is.na(dat.all),]
dat.all
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 1.5)
p
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 2)
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 1.5)
p
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 1)
p <- ggtree(tre.ewv2.pruned, layout = 'rectangular')+
geom_tiplab(fontface = 'italic', size = 0.75)
p
#---------------------------------------------------------------------------------------------------
# FUNCTION CALL
dat.18 <- dat.all[which(dat.all$year == '2018'),]
dat.07 <- dat.all[which(dat.all$year == '2007'),]
View(dat.07)
source('~/Documents/GitHub/east_woods_work/scripts/07.community_data_matrices.pres_abs.R')
source('~/Documents/GitHub/east_woods_work/scripts/08.phylo_metrics.R')
setwd('~/Documents/GitHub/east_woods_work/')
View(pd07)
View(phylo_understory_07)
phylo_understory_18 <- ses.pd(dat.mat.understory.18, tr.ewv4, include.root = F)
phylo_trees_18 <- ses.pd(dat.mat.trees.18, tr.ewv4, include.root = F)
View(phylo_understory_18)
View(phylo_all_07)
