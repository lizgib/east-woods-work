num_plots_18 <- c(num_plots_18, length(plots))
}
new_dat$num_plots_18 <- num_plots_18
# Raw name -- Cleaned name from TNRS -- 2007 total plots -- 2018 total plots
names(new_dat) <- c('Raw_name', 'Cleaned_name_from_TNRS', '2007_total_plots', '2018_total_plots')
write.csv(new_dat, '../OUTPUTS/plot_species_record.csv')
source('~/Documents/morton arb/east_woods_phylogeny/SCRIPTS/14.combine_spp_pools.R')
library(magrittr)
dat.all.sorted <- sapply(dat.all$species, function(x) x) %>%
unlist %>%
trimws %>%
unique %>%
sort
dat.all.sorted <- data.frame(dat.all.sorted)
write.csv(dat.all.sorted, '../OUTPUTS/complete_spp_list.csv')
tnrs_all <- data.frame(read.csv('../OUTPUTS/complete_tnrs_list.csv', as.is = T))
tnrs_all <- data.frame(read.csv('../OUTPUTS/complete_tnrs_list.csv', as.is = T))
dat.all$accepted_name <- tnrs_all$Accepted_name[match(dat.all$species, tnrs_all$Name_submitted)]
dat.07$accepted_name <- tnrs_all$Accepted_name[match(dat.07$species, tnrs_all$Name_submitted)]
dat.18$accepted_name <- tnrs_all$Accepted_name[match(dat.18$species, tnrs_all$Name_submitted)]
source('~/Documents/morton arb/east_woods_phylogeny/SCRIPTS/15.falltranslationkey.R')
spp07_cleaned <- sort(unique(dat.07$accepted_name))
spp18_cleaned <- sort(unique(dat.18$accepted_name))
allspp_cleaned <- sort(unique(dat.all$accepted_name))
spp07_uncleaned <- sort(unique(dat.07$species))
spp18_uncleaned <- sort(unique(dat.18$species))
allspp_uncleaned <- sort(unique(dat.all$species))
length(spp07_cleaned)   # 285 species reported in 2007
length(spp18_cleaned)   # 346 species reported in 2018
length(allspp_cleaned)  # 437 species between years
length(spp07_uncleaned)   # 318 species reported in 2007
length(spp18_uncleaned)   # 442 species reported in 2018
length(allspp_uncleaned)  # 598 species between years
#####################################################################################################
# CLEANED
both_07_and_18 <- sort(intersect(spp07_cleaned, spp18_cleaned))  # 194 species in both 2007 and 2018
in_07_not_18 <- sort(setdiff(spp07_cleaned, spp18_cleaned))  # 91 species found only in 2007
in_18_not_07 <- sort(setdiff(spp18_cleaned, spp07_cleaned))  # 152 species found only in 2018
both <- c()
only_07 <- c()
only_18 <- c()
whatschanged <- data.frame(allspp_cleaned)
for (sp in whatschanged$allspp){
ifelse(sp %in% both_07_and_18,
both <-c(both, 1), both <- c(both, 0))
ifelse(sp %in% in_07_not_18,
only_07 <- c(only_07, 1), only_07 <- c(only_07, 0))
ifelse(sp %in% in_18_not_07,
only_18 <- c(only_18, 1), only_18 <- c(only_18, 0))
}
whatschanged$both_07_and_18 <- both
whatschanged$only_in_07 <- only_07
whatschanged$only_in_18 <- only_18
spp_counts_07 <- data.frame(table(dat.07$accepted_name))
spp_counts_18 <- data.frame(table(dat.18$accepted_name))
whatschanged$freq_07  <- spp_counts_07$Freq[match(whatschanged$allspp_cleaned, spp_counts_07$Var1)]
whatschanged$freq_18  <- spp_counts_18$Freq[match(whatschanged$allspp_cleaned, spp_counts_18$Var1)]
write.csv(whatschanged, 'tnrs.spp_compare_years.csv')
#####################################################################################################
# UNCLEANED
both_07_and_18 <- sort(intersect(spp07_uncleaned, spp18_uncleaned))
in_07_not_18 <- sort(setdiff(spp07_uncleaned, spp18_uncleaned))
in_18_not_07 <- sort(setdiff(spp18_uncleaned, spp07_uncleaned))
both <- c()
only_07 <- c()
only_18 <- c()
whatschanged <- data.frame(allspp_uncleaned)
for (sp in whatschanged$allspp){
ifelse(sp %in% both_07_and_18,
both <-c(both, 1), both <- c(both, 0))
ifelse(sp %in% in_07_not_18,
only_07 <- c(only_07, 1), only_07 <- c(only_07, 0))
ifelse(sp %in% in_18_not_07,
only_18 <- c(only_18, 1), only_18 <- c(only_18, 0))
}
whatschanged$both_07_and_18 <- both
whatschanged$only_in_07 <- only_07
whatschanged$only_in_18 <- only_18
spp_counts_07 <- data.frame(table(dat.07$species))
spp_counts_18 <- data.frame(table(dat.18$species))
whatschanged$freq_07  <- spp_counts_07$Freq[match(whatschanged$allspp_uncleaned, spp_counts_07$Var1)]
whatschanged$freq_18  <- spp_counts_18$Freq[match(whatschanged$allspp_uncleaned, spp_counts_18$Var1)]
write.csv(whatschanged, 'uncleaned.spp_compare_years.csv')
######################################################################################################
# raw name  # cleaned name # num plots 2007 # num plots 2018
new_dat <- data.frame(allspp_uncleaned)
new_dat$cleaned_name <- tnrs_all$Accepted_name[match(allspp_uncleaned, tnrs_all$Name_submitted)]
num_plots_07 <- c()
for (spp in new_dat$allspp_uncleaned){
plots <- c()
plots <- c(plots, unique(dat.07$plot[which(dat.07$species == spp)]))
num_plots_07 <- c(num_plots_07, length(plots))
}
new_dat$num_plots_07 <- num_plots_07
num_plots_18 <- c()
for (spp in new_dat$allspp_uncleaned){
plots <- c()
plots <- c(plots, unique(dat.07$plot[which(dat.18$species == spp)]))
num_plots_18 <- c(num_plots_18, length(plots))
}
new_dat$num_plots_18 <- num_plots_18
# Raw name -- Cleaned name from TNRS -- 2007 total plots -- 2018 total plots
names(new_dat) <- c('Raw_name', 'Cleaned_name_from_TNRS', '2007_total_plots', '2018_total_plots')
write.csv(new_dat, '../OUTPUTS/plot_species_record.csv')
source('~/Documents/morton arb/east_woods_phylogeny/SCRIPTS/17.envt_data.R')
source('~/Documents/morton arb/east_woods_phylogeny/SCRIPTS/19.1.community_data_matrices.pres_abs.R')
source('~/Documents/morton arb/east_woods_phylogeny/SCRIPTS/20.phylo_dist_matrices.R')
library(picante)
library(ggplot2)
library(ape)
#setwd('~/Documents/morton arb/east_woods_phylogeny/DATA/')
#git version
setwd('~/Documents/GitHub/east-woods-work/data/')
#setwd('~/Documents/morton arb/east_woods_phylogeny/DATA/')
#git version
setwd('~/Documents/GitHub/east-woods-work/data/')
#setwd('~/Documents/morton arb/east_woods_phylogeny/DATA/')
#git version
setwd('~/Documents/GitHub/east_woods_work/data/survey_data/')
dat.herb.spring.07.o <- read.csv('spp.herb.2007.csv', as.is = T) # what is with the o's?? i think it was original but why 11/1 10:15
dat.herb.spring.07 <- dat.herb.spring.07.o[1:6]
dat.herb.fall.07.o <- read.csv('sum.spp.herb.2007.csv', as.is = T)
dat.herb.fall.07 <- dat.herb.fall.07.o[1:6]
dat.shrub.spring.07.o <- read.csv('spp.shrub.2007.csv', as.is = T)
dat.shrub.spring.07 <- dat.shrub.spring.07.o[1:6]
dat.shrub.fall.07.o <- read.csv('sum.spp.shrub.2007.csv', as.is = T)
dat.shrub.fall.07 <- dat.shrub.fall.07.o[1:6]
dat.tree.spring.07.o <- read.csv('spp.tree.2007.csv', as.is = T)
dat.tree.spring.07 <- dat.tree.spring.07.o[1:6]
dat.tree.fall.07.o <- read.csv('sum.spp.tree.2007.csv', as.is = T)
dat.tree.fall.07 <- dat.tree.fall.07.o[1:6]
#########################################################################################
#2018
dat.herb.spring.18.o <- read.csv('final.herbs.2018.csv', as.is = T)
dat.herb.spring.18 <- dat.herb.spring.18.o[3:6]
dat.herb.fall.18.o <- read.csv('fall.herbs.2018.csv', as.is = T)
dat.herb.fall.18 <- dat.herb.fall.18.o[3:6]
dat.shrub.spring.18.o <- read.csv('final.shrubs.2018.csv', as.is = T)
dat.shrub.spring.18 <- dat.shrub.spring.18.o[3:8]
dat.shrub.spring.18$Category..Seedling.S...Sapling.U...Shrub.SH. <- NULL
dat.shrub.spring.18$Sapling.Category...5cm.or...5cm <- NULL
dat.tree.spring.18.o <- read.csv('final.trees.2018.csv', as.is = T)
dat.tree.spring.18 <- dat.tree.spring.18.o[3:6]
#########################################################################################
# COMBINE SPP POOLS
#########################################################################################
#2007
dat.07 <- dat.herb.spring.07
names(dat.herb.fall.07) <- names(dat.herb.spring.07)
dat.herbs07 <- rbind(dat.07, dat.herb.fall.07)
dat.herbs07$datset <- 'H'
dat.07.1 <- dat.herbs07 # why am I putting them into this .1 object?? i cant remember 11/1 10:15
names(dat.shrub.fall.07) <- names(dat.07[1:6])
names(dat.shrub.spring.07) <- names(dat.07[1:6])
dat.shrubs07 <- rbind(dat.shrub.fall.07, dat.shrub.spring.07)
dat.shrubs07$datset <- 'S'
names(dat.tree.fall.07) <- names(dat.07[1:6])
names(dat.tree.spring.07) <- names(dat.07[1:6])
dat.trees07 <- rbind(dat.tree.spring.07, dat.tree.fall.07)
dat.trees07$datset <- "T"
dat.07.1 <- rbind(dat.07.1, dat.shrubs07, dat.trees07) # Why did I do this?? 11/1 10:11 is wondering?
######################################################################################################
#2018
names(dat.herb.fall.18) <- names(dat.07[1:4])
names(dat.herb.spring.18) <- names(dat.07[1:4])
dat.herbs18 <- rbind(dat.herb.fall.18, dat.herb.spring.18)
dat.herbs18$datset <- 'H'
names(dat.shrub.spring.18) <- names(dat.07[1:4])
#names(dat.shrub.fall.18) <- names(dat.07[1:4])
#dat.shrubs18 <- rbind(dat.shrub.spring.18, dat.shrub.fall.18) # why did i have a fall dataset? I dont think they resurveyed?
dat.shrubs18 <- dat.shrub.spring.18
dat.shrubs18$datset <- 'S'
names(dat.tree.spring.18) <- names(dat.07[1:4])
#names(dat.tree.fall.18) <- names(dat.07[1:4])
#dat.trees18 <- rbind(dat.tree.fall.18, dat.tree.spring.18)
dat.trees18 <- dat.tree.spring.18
dat.trees18$datset <- 'T'
dat.18 <- rbind(dat.herbs18, dat.shrubs18, dat.trees18)
######################################################################################################
#2007 + 2018
#neeeeed to make sure that the species dont have any weird spacing or characters in the name that will
# mess up later analysis
dat.07.1$species <- trimws(dat.07.1$species)
dat.18$species <- trimws(dat.18$species)
dat.07 <- dat.07.1[, c('plot', 'code', 'species', 'cover','datset')]
#just adding a column to make keeping track of the years easier
dat.07$year <- 2007
dat.18$year <- 2018
dat.all <- rbind(dat.18, dat.07)
dat.all$plot <- gsub('-', '', dat.all$plot)
dat.07$plot <- gsub('-', '', dat.07$plot)
dat.herb.fall.07$plot <- gsub('-', '', dat.herb.fall.07$plot)
dat.tree.fall.07$plot <- gsub('-', '', dat.tree.fall.07$plot)
dat.shrub.fall.07$plot <- gsub('-', '', dat.shrub.fall.07$plot)
# git version
#write.csv(dat.all, '../outputs/all_survey_data.csv')
source('~/Documents/GitHub/east_woods_work/scripts/01.combine_spp_pools.R')
library(magrittr)
dat.all.sorted <- sapply(dat.all$species, function(x) x) %>%
unlist %>%
trimws %>%
unique %>%
sort
dat.all.sorted <- data.frame(dat.all.sorted)
write.csv(dat.all.sorted, '../../outputs//complete_spp_list.csv')
tnrs_all <- data.frame(read.csv('../../outputs/complete_tnrs_list.csv', as.is = T))
write.csv(dat.all.sorted, '../../outputs/complete_spp_list.csv')
tnrs_all <- data.frame(read.csv('../../outputs/complete_tnrs_list.csv', as.is = T))
dat.all$accepted_name <- tnrs_all$Accepted_name[match(dat.all$species, tnrs_all$Name_submitted)]
dat.07$accepted_name <- tnrs_all$Accepted_name[match(dat.07$species, tnrs_all$Name_submitted)]
dat.18$accepted_name <- tnrs_all$Accepted_name[match(dat.18$species, tnrs_all$Name_submitted)]
source('~/Documents/GitHub/east_woods_work/scripts/02.falltranslationkey.R')
spp07_cleaned <- sort(unique(dat.07$accepted_name))
spp18_cleaned <- sort(unique(dat.18$accepted_name))
allspp_cleaned <- sort(unique(dat.all$accepted_name))
spp07_uncleaned <- sort(unique(dat.07$species))
spp18_uncleaned <- sort(unique(dat.18$species))
allspp_uncleaned <- sort(unique(dat.all$species))
length(spp07_cleaned)   # 285 species reported in 2007
length(spp18_cleaned)   # 346 species reported in 2018
length(allspp_cleaned)  # 437 species between years
length(spp07_uncleaned)   # 318 species reported in 2007
length(spp18_uncleaned)   # 442 species reported in 2018
length(allspp_uncleaned)  # 598 species between years
both_07_and_18 <- sort(intersect(spp07_cleaned, spp18_cleaned))  # 194 species in both 2007 and 2018
in_07_not_18 <- sort(setdiff(spp07_cleaned, spp18_cleaned))  # 91 species found only in 2007
in_18_not_07 <- sort(setdiff(spp18_cleaned, spp07_cleaned))  # 152 species found only in 2018
both <- c()
only_07 <- c()
only_18 <- c()
whatschanged <- data.frame(allspp_cleaned)
for (sp in whatschanged$allspp){
ifelse(sp %in% both_07_and_18,
both <-c(both, 1), both <- c(both, 0))
ifelse(sp %in% in_07_not_18,
only_07 <- c(only_07, 1), only_07 <- c(only_07, 0))
ifelse(sp %in% in_18_not_07,
only_18 <- c(only_18, 1), only_18 <- c(only_18, 0))
}
whatschanged$both_07_and_18 <- both
whatschanged$only_in_07 <- only_07
whatschanged$only_in_18 <- only_18
spp_counts_07 <- data.frame(table(dat.07$accepted_name))
spp_counts_18 <- data.frame(table(dat.18$accepted_name))
whatschanged$freq_07  <- spp_counts_07$Freq[match(whatschanged$allspp_cleaned, spp_counts_07$Var1)]
whatschanged$freq_18  <- spp_counts_18$Freq[match(whatschanged$allspp_cleaned, spp_counts_18$Var1)]
write.csv(whatschanged, 'tnrs.spp_compare_years.csv')
both_07_and_18 <- sort(intersect(spp07_uncleaned, spp18_uncleaned))
in_07_not_18 <- sort(setdiff(spp07_uncleaned, spp18_uncleaned))
in_18_not_07 <- sort(setdiff(spp18_uncleaned, spp07_uncleaned))
both <- c()
only_07 <- c()
only_18 <- c()
whatschanged <- data.frame(allspp_uncleaned)
for (sp in whatschanged$allspp){
ifelse(sp %in% both_07_and_18,
both <-c(both, 1), both <- c(both, 0))
ifelse(sp %in% in_07_not_18,
only_07 <- c(only_07, 1), only_07 <- c(only_07, 0))
ifelse(sp %in% in_18_not_07,
only_18 <- c(only_18, 1), only_18 <- c(only_18, 0))
}
whatschanged$both_07_and_18 <- both
whatschanged$only_in_07 <- only_07
whatschanged$only_in_18 <- only_18
spp_counts_07 <- data.frame(table(dat.07$species))
spp_counts_18 <- data.frame(table(dat.18$species))
whatschanged$freq_07  <- spp_counts_07$Freq[match(whatschanged$allspp_uncleaned, spp_counts_07$Var1)]
whatschanged$freq_18  <- spp_counts_18$Freq[match(whatschanged$allspp_uncleaned, spp_counts_18$Var1)]
write.csv(whatschanged, 'uncleaned.spp_compare_years.csv')
new_dat <- data.frame(allspp_uncleaned)
new_dat$cleaned_name <- tnrs_all$Accepted_name[match(allspp_uncleaned, tnrs_all$Name_submitted)]
num_plots_07 <- c()
for (spp in new_dat$allspp_uncleaned){
plots <- c()
plots <- c(plots, unique(dat.07$plot[which(dat.07$species == spp)]))
num_plots_07 <- c(num_plots_07, length(plots))
}
new_dat$num_plots_07 <- num_plots_07
num_plots_18 <- c()
for (spp in new_dat$allspp_uncleaned){
plots <- c()
plots <- c(plots, unique(dat.07$plot[which(dat.18$species == spp)]))
num_plots_18 <- c(num_plots_18, length(plots))
}
new_dat$num_plots_18 <- num_plots_18
# Raw name -- Cleaned name from TNRS -- 2007 total plots -- 2018 total plots
names(new_dat) <- c('Raw_name', 'Cleaned_name_from_TNRS', '2007_total_plots', '2018_total_plots')
write.csv(new_dat, '../OUTPUTS/plot_species_record.csv')
write.csv(whatschanged, '../../outputs/tnrs.spp_compare_years.csv')
write.csv(whatschanged, '../../outputs/uncleaned.spp_compare_years.csv')
write.csv(new_dat, '../../outputs/plot_species_record.csv')
source('~/Documents/GitHub/east_woods_work/scripts/02.falltranslationkey.R')
usda_spp_dat <- read.csv('usda_spp_info.csv')
native_id <- data.frame(usda_spp_dat[,c('Scientific.Name', 'Native.Status')])
names(native_id) <- c('Accepted_name', 'native')
native_id$native <- 'n'
invasive_tnrs <- read.csv('../DATA/invasives_tnrs.csv')
invasive_tnrs$native <- 'i'
setwd('~/Documents/GitHub/east_woods_work/data/')
source('~/Documents/GitHub/east_woods_work/scripts/02.falltranslationkey.R')
setwd('~/Documents/GitHub/east_woods_work/data/')
usda_spp_dat <- read.csv('species_data/usda_spp_info.csv')
native_id <- data.frame(usda_spp_dat[,c('Scientific.Name', 'Native.Status')])
names(native_id) <- c('Accepted_name', 'native')
native_id$native <- 'n'
invasive_tnrs <- read.csv('species_data/invasives_tnrs.csv')
invasive_tnrs$native <- 'i'
native_id <- rbind(native_id, invasive_tnrs[,c('Accepted_name', 'native')])
dat.all$nativestatus <- native_id$native[match(dat.all$accepted_name, native_id$Accepted_name)]
missing_natives <- unique(dat.all$accepted_name[which(is.na(dat.all$nativestatus))]) # I have this number trimmed down to 86!!
#############################################################################################
# manually go through list of 86 spp and get IDs for them --> Dr. Hipp did this part
# read back in the missing natives file
revised_missing_invasives <- read.csv('species_data/missing_natives - missing_natives.csv')[,2:3] # 11/4 7:32 PM is wondering what this file is??
names(revised_missing_invasives) <- c('Accepted_name', 'native')
# append the missing names/statuses to native_id
native_id <- rbind(native_id, revised_missing_invasives)
dat.all$nativestatus <- native_id$native[match(dat.all$accepted_name, native_id$Accepted_name)]
source('~/Documents/GitHub/east_woods_work/scripts/04.natives.R')
spp_info <- unique(native_id)
###################
# PERENNIAL/ANNUAL
###################
spp_info$perennial_annual <- usda_spp_dat$Duration[match(spp_info$Accepted_name, usda_spp_dat$Scientific.Name)]
#make my dataframe w plot, spp, accname, and cover
# ok so the gameplan here is that i will keep the cover of each veg type as a separate unit
# each veg type will amount to 100% for each plot (so the sum of all plant %cover should = 100%,
# the sum of all basal areas of trees in a plot = 100%, and the total number of stems for shrubs
# = 100%)
# each plot will have a total cover of 3
# I am not going to be comparing the relative quantities of trees to shrubs to herbs
# I am comparing the composition of shrubs, herbs, trees, between plots
source('~/Documents/GitHub/east_woods_work/scripts/02.falltranslationkey.R')
dat.all$cover <- as.numeric(dat.all$cover)
dat.07$cover <- as.numeric(dat.07$cover)
dat.18$cover <- as.numeric(dat.18$cover)
dat.07$plot <- gsub('-', '', dat.07$plot)
dat.all$plot <- gsub('-', '', dat.all$plot)
####################################################################################################################
# ok looking at cover for 2007 herb layer
herbs07 <- dat.07[which(dat.07$datset == 'H'),]
herb_plots <- data.frame(unique(herbs07$plot))
total_cover <- c()
for (i in herb_plots$unique.herbs07.plot.){
temp <- sum(herbs07$cover[which(herbs07$plot == i)])
total_cover <- c(total_cover, temp/2) #### OMG THIS IS A MeSS SOME HOW ITS DOUBLING MY HERB COVER!!!!!
}
herb_plots$total_cover <- total_cover
plot_herb_cover <- c()
for (plt in herbs07$plot){
plot_herb_cover <- c(plot_herb_cover, herb_plots$total_cover[which(plt == herb_plots$unique.herbs07.plot.)])
}
herbs07$plot_herb_cover <- plot_herb_cover
herbs07 <- herbs07[which(!herbs07$cover == 0),]
percent_of_total_cover <- c() #creating a new column which will have the percent of total plot area that
for(cover in herbs07$cover){ #...each spp in the plot takes up
ptc <- cover/herb_plots$total_cover[which(herb_plots$unique.herbs07.plot. == herbs07$plot[cover])]
percent_of_total_cover <- c(percent_of_total_cover, ptc)
} ####>>>>?>?>>?>?>? this is almost perfect but i have total covers over 100% which i dont want......<<<<<??
herbs07$percent_total_cover <- percent_of_total_cover #add this percent of total area to the original
#########################################################
# THIS WORKS !!! DONT TOUCH IT 10:20 PM 10-6-18
#########################################################
####################################################################################################################
#adjust the trees to be in basal area
trees07 <- dat.07[which(dat.07$datset == 'T'),]
trees07 <- na.omit(trees07) #get rid of the na's because they mess up the number of rows later
trees07 <- trees07[which(!trees07$cover == 0),] #get rid of rows that have no trees07 reported
#plot area = 33.82 sq ft
BA <- c() #calculate the basal area (just the area of the trunk)
for (c in trees07$cover){
c <- c * 0.0328084 #converting the cm DBH into feet  (so the final area is in sq feet)
basal_area <- pi * (c/2)**2
BA <- c(BA, basal_area)
}
trees07$BA <- BA #add a column for BA
tree_plots <- data.frame(unique(trees07$plot)) #get all the tree plots
total_cover <- c() #doing the same thing i did for herbs, take all the basal areas in a plot and
for (plt in tree_plots$unique.trees07.plot.){ #... add them together so you have the total area
temp <- sum(trees07$cover[which(trees07$plot == plt)]) # .. that is occupied by trees07
total_cover <- c(total_cover, temp)
}
tree_plots$total_cover <- total_cover
plot_tree_cover <- c()
for (plt in trees07$plot){
plot_tree_cover <- c(plot_tree_cover, tree_plots$total_cover[which(plt == tree_plots$unique.trees07.plot.)])
}
trees07$plot_tree_cover <- plot_tree_cover
percent_of_total_cover <- c()
for(x in 1:length(trees07$plot)){ #for each spp in the original data
temp <-
trees07$cover[x]/tree_plots$total_cover[which(tree_plots$unique.trees07.plot. == trees07$plot[x])]
#divide the cover that species occupies by the total tree cover value for that plot
percent_of_total_cover <- c(percent_of_total_cover, temp)
}
trees07$percent_total_cover <- percent_of_total_cover
#####################################################################################################################
#adjust shrubs to be in percent cover
shrubs07 <- dat.07[which(dat.07$datset == 'S'),]
shrub_plots <- data.frame(unique(shrubs07$plot)) #get all the shrub plots
total_cover <- c()
for (plt in shrub_plots$unique.shrubs07.plot.){ #for each shrub plot I find the sum of all the percent covers
temp <- sum(shrubs07$cover[which(shrubs07 == plt)]) #this will be over 100% for some plots
total_cover <- c(total_cover, temp)
}
shrub_plots$total_cover <- total_cover #I make a new dataframe that has the total cover for each plot
shrubs07 <- shrubs07[which(!shrubs07$cover == 0),] #I get rid of any rows that I won't be able to divide on
percent_of_total_cover <- c() #creating a new column which will have the percent of total plot area that
for(cover in shrubs07$cover){ #...each spp in the plot takes up
ptc <- cover/shrub_plots$total_cover[which(shrub_plots$unique.shrubs07.plot. == shrubs07$plot[cover])]
percent_of_total_cover <- c(percent_of_total_cover, ptc)
}
shrubs07$percent_total_cover <- percent_of_total_cover #add this percent of total area to the original
# DO FOR 2018
#####################################################################################################
# herbs 2018
herbs18 <- dat.18[which(dat.18$datset == 'H'),]
herb_plots <- data.frame(unique(herbs18$plot))
total_cover <- c()
for (i in herb_plots$unique.herbs18.plot.){
temp <- sum(herbs18[which(herbs18$plot == i),'cover'])
total_cover <- c(total_cover, temp/2)
}
herb_plots$total_cover <- total_cover
plot_herb_cover <- c()
for (plt in herbs18$plot){
plot_herb_cover <- c(plot_herb_cover, herb_plots$total_cover[which(plt == herb_plots$unique.herbs18.plot.)])
}
herbs18$plot_herb_cover <- plot_herb_cover
herbs18 <- herbs18[which(!herbs18$cover == 0),]
percent_of_total_cover <- c() #creating a new column which will have the percent of total plot area that
for(cover in herbs18$cover){ #...each spp in the plot takes up
ptc <- cover/herb_plots$total_cover[which(herb_plots$unique.herbs18.plot. == herbs18$plot[cover])]
percent_of_total_cover <- c(percent_of_total_cover, ptc)
}
herbs18$percent_total_cover <- percent_of_total_cover #add this percent of total area to the original
##########################################################################################################
#adjust the trees to be in basal area
trees18 <- dat.18[which(dat.18$datset == 'T'),]
trees18 <- na.omit(trees18) #get rid of the na's because they mess up the number of rows later
trees18 <- trees18[which(!trees18$cover == 0),] #get rid of rows that have no trees18 reported
#plot area = 33.82 sq ft
BA <- c() #calculate the basal area (just the area of the trunk)
for (c in trees18$cover){
c <- c * 0.0328084 #converting the cm DBH into feet  (so the final area is in sq feet)
basal_area <- pi * (c/2)**2
BA <- c(BA, basal_area)
}
trees18$cover <- BA #replace the DBH values with the basal area. we don't care about dbh anymore
tree_plots <- data.frame(unique(trees18$plot)) #get all the tree plots
total_cover <- c() #doing the same thing i did for herbs, take all the basal areas in a plot and
for (plt in tree_plots$unique.trees18.plot.){ #... add them together so you have the total area
temp <- sum(trees18$cover[which(trees18$plot == plt)]) # .. that is occupied by trees18
total_cover <- c(total_cover, temp)
}
tree_plots$total_cover <- total_cover
plot_tree_cover <- c()
for (plt in trees18$plot){
plot_tree_cover <- c(plot_tree_cover, tree_plots$total_cover[which(plt == tree_plots$unique.trees18.plot.)])
}
trees18$plot_tree_cover <- plot_tree_cover
percent_of_total_cover <- c()
for(x in 1:length(trees18$plot)){ #for each spp in the original data
temp <-
trees18$cover[x]/tree_plots$total_cover[which(tree_plots$unique.trees18.plot. == trees18$plot[x])]
# divide the cover that species occupies by the total tree cover value for that plot
percent_of_total_cover <- c(percent_of_total_cover, temp)
}
trees18$percent_total_cover <- percent_of_total_cover
##########################################################################################################
#adjust shrubs to be in percent cover
shrubs18 <- dat.18[which(dat.18$datset == 'S'),]
shrub_plots <- data.frame(unique(shrubs18$plot)) #get all the shrub plots
total_cover <- c()
for (plt in shrub_plots$unique.shrubs18.plot.){ #for each shrub plot I find the sum of all the percent covers
temp <- sum(shrubs18$cover[which(shrubs18$plot == plt)]) #this will be over 100% for some plots
total_cover <- c(total_cover, temp)
}
shrub_plots$total_cover <- total_cover #I make a new dataframe that has the total cover for each plot
shrubs18 <- shrubs18[which(!shrubs18$cover == 0),] #I get rid of any rows that I won't be able to divide on
percent_of_total_cover <- c() #creating a new column which will have the percent of total plot area that
for(i in 1:length(shrubs18$plot)){ #...each spp in the plot takes up
percent_of_total_cover <-
c(percent_of_total_cover, ((shrubs18[i,'cover'])/(shrub_plots[which(shrub_plots$unique.shrubs18.plot. == shrubs18[i,'plot']), 'total_cover'])))
}
shrubs18$percent_total_cover <- percent_of_total_cover #add this percent of total area to the original
setwd("~/Documents/GitHub/east_woods_work/")
setwd("~/Documents/GitHub/east_woods_work/")
source('https://raw.githubusercontent.com/andrew-hipp/morton/master/R/makeMat.R')
source('https://raw.githubusercontent.com/andrew-hipp/morton/master/R/weldTaxa.R')
source('https://raw.githubusercontent.com/andrew-hipp/morton/master/R/label.elements.R')
source('~/Documents/GitHub/east_woods_work/scripts/05.speciesinfo.R')
if(!exists('tr.zanne')) tr.zanne <- read.tree('data/phylo.zanne.tre')
dat.all$accepted_name <- gsub('[ ,.] ', '_', dat.all$accepted_name)
tre.ewv1 <- make.matAndTree(tr.zanne, dat.all, name.column = 'accepted_name')
write.csv(tre.ewv1$matrix.renaming, '../../outputs/tree_taxa_4.csv')
tre.ewv2 <- weldTaxa(tre.ewv1)
tre.ewv2.pruned <- drop.tip(tre.ewv2, which(!tre.ewv2$tip.label %in% row.names(tre.ewv1$matrix.renaming)))
write.tree(tre.ewv2.pruned, '../../outputs/tr.ewv4')
if(!exists('tr.zanne')) tr.zanne <- read.tree('phylo.zanne.tre')
dat.all$accepted_name <- gsub('[ ,.] ', '_', dat.all$accepted_name)
tre.ewv1 <- make.matAndTree(tr.zanne, dat.all, name.column = 'accepted_name')
write.csv(tre.ewv1$matrix.renaming, '../../outputs/tree_taxa_4.csv')
write.csv(tre.ewv1$matrix.renaming, '../outputs/tree_taxa_4.csv')
tre.ewv2 <- weldTaxa(tre.ewv1)
tre.ewv2.pruned <- drop.tip(tre.ewv2, which(!tre.ewv2$tip.label %in% row.names(tre.ewv1$matrix.renaming)))
write.tree(tre.ewv2.pruned, '../../outputs/tr.ewv4')
write.tree(tre.ewv2.pruned, '../outputs/tr.ewv4')
source('~/Documents/GitHub/east_woods_work/scripts/08.community_data_matrices.pres_abs.R')
source('~/Documents/GitHub/east_woods_work/scripts/09.envt_data.R')
source('~/Documents/GitHub/east_woods_work/scripts/10.phylo_dist_matrices.R')
